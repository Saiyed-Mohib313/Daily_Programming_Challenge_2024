import java.util.Deque;
import java.util.LinkedList;
import java.util.Scanner;

public class Day_23_SlidingWindowMaximum {

    public static int[] maxSlidingWindow(int[] arr, int k) {
        if (arr == null || arr.length == 0) return new int[0];

        int n = arr.length;
        int[] result = new int[n - k + 1];
        Deque<Integer> deque = new LinkedList<>();

        for (int i = 0; i < n; i++) {
            
            if (!deque.isEmpty() && deque.peekFirst() == i - k) {
                deque.pollFirst();
            }

            while (!deque.isEmpty() && arr[deque.peekLast()] < arr[i]) {
                deque.pollLast();
            }

            deque.offerLast(i);

            if (i >= k - 1) {
                result[i - k + 1] = arr[deque.peekFirst()];
            }
        }

        return result;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.println("Enter the elements of the array (space-separated):");
        String[] inputArr = sc.nextLine().split(" ");
        int n = inputArr.length;
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = Integer.parseInt(inputArr[i]);
        }

        System.out.println("Enter the value of k:");
        int k = sc.nextInt();
       
        int[] result = maxSlidingWindow(arr, k);

        System.out.println("The maximum of each sliding window is:");
        for (int max : result) {
            System.out.print(max + " ");
        }

    }
}
