import java.util.HashMap;
import java.util.Scanner;

public class Day_14_SubstringsWithKDistinctChars {
    
    public static int countSubstringsWithKDistinctChars(String s, int k) {
        return countAtMostKDistinct(s, k) - countAtMostKDistinct(s, k - 1);
    }
    private static int countAtMostKDistinct(String s, int k) {
        int n = s.length();
        int count = 0;
        int left = 0;
        HashMap<Character, Integer> charCount = new HashMap<>();


        for (int right = 0; right < n; right++) {
            char rightChar = s.charAt(right);
            charCount.put(rightChar, charCount.getOrDefault(rightChar, 0) + 1);

            while (charCount.size() > k) {
                char leftChar = s.charAt(left);
                charCount.put(leftChar, charCount.get(leftChar) - 1);
                if (charCount.get(leftChar) == 0) {
                    charCount.remove(leftChar);
                }
                left++;
            }
            count += right - left + 1;
        }
        return count;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        System.out.print("Enter the string: ");
        String s = sc.nextLine();
        
        System.out.print("Enter the value of k: ");
        int k = sc.nextInt();
        
        int result = countSubstringsWithKDistinctChars(s, k);
        System.out.println("Number of substrings with exactly " + k + " distinct characters: " + result);
    }
}
