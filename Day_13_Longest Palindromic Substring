import java.util.Scanner;
public class Day_13_LongestPalindromicSubstring {
    
    public String longestPalindrome(String s) {
        if (s == null || s.length() < 1) return "";
        int start = 0, end = 0;

        for (int i = 0; i < s.length(); i++) {
            // Odd
            int len1 = expandAroundCenter(s, i, i);
            // Even
            int len2 = expandAroundCenter(s, i, i + 1);
            //maximum length
            int len = Math.max(len1, len2);
// find if new is present

            if (len > end - start) {
                start = i - (len - 1) / 2;
                end = i + len / 2;
            }
        }
        return s.substring(start, end + 1);
    }

    private int expandAroundCenter(String s, int left, int right) {
   
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }

        return right - left - 1;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); 
        
        // Prompt the user to input a string
        System.out.print("Enter a string: ");
        String input = sc.nextLine();  
        Day_13_LongestPalindromicSubstring solution = new Day_13_LongestPalindromicSubstring();
        
        System.out.println("Longest Palindromic Substring: " + solution.longestPalindrome(input));
        
    }
}


